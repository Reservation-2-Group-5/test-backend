// Reuse the certificate generated by dotnet dev-certs from the main app

const fs = require('fs');
const path = require('path');

const baseFolder = process.env.APPDATA !== undefined && process.env.APPDATA !== ''
  ? `${process.env.APPDATA}/ASP.NET/https`
  : `${process.env.HOME}/.aspnet/https`;

const certificateArg = process.argv.map((arg) => arg.match(/--name=(?<value>.+)/i)).filter(Boolean)[0];
const certificateName = certificateArg ? certificateArg.groups.value : 'vueapp';

console.log(`Checking for certificates in ${baseFolder}`);
if (!certificateName) {
  console.error('Invalid certificate name. Run this script in the context of an npm/yarn script or pass --name=<<app>> explicitly.');
}

const certFilePath = path.join(baseFolder, `${certificateName}.pem`);
const keyFilePath = path.join(baseFolder, `${certificateName}.key`);

const exists = fs.existsSync(certFilePath) && fs.existsSync(keyFilePath);

if (exists) {
  console.log(`Using certificate: ${certFilePath}`);
  console.log(`Using key: ${keyFilePath}`);
} else {
  console.log('No certificate found. Skipping https configuration.');
}

module.exports = {
  key: (exists) ? fs.readFileSync(keyFilePath) : null,
  cert: (exists) ? fs.readFileSync(certFilePath) : null,
};
